# SPDX-License-Identifier: CC-BY-4.0 OR GPL-3.0-or-later
# This file is part of Network Engineering Pro

# This workflow will lint all JavaScript with ESLint, check all formatting with
# Prettier, run tests using node 20.x and 22.x on ubuntu-24.04, and then publish
# a package to GitHub Packages when a release is created

# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build/Test Webpack, Publish to GitHub Packages

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  check-codeql:
    name: Check CodeQL Analysis
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up GitHub CLI
        run: sudo apt-get install gh
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
      - name: Check CodeQL Workflow
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh run list --workflow "CodeQL" --json conclusion --jq '.[0].conclusion' > codeql_status.txt
          CODEQL_STATUS=$(cat codeql_status.txt)
          if [[ "$CODEQL_STATUS" != "success" ]]; then
            echo "CodeQL Analysis did not succeed. Exiting..."
            exit 1

  build:
    needs: check-codeql
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-build-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-build-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Run tests using Mocha framework
        run: npm test
        continue-on-error: true
      # Uncomment the following lines if you want to lint and format your code
      # - name: Lint code and check formatting
      #   run: npm run lint
      #   continue-on-error: true
      - name: Build project
        run: npm run build
      - name: Copy package.json to dist directory
        run: cp package.json dist/

  publish-npm:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://npm.pkg.github.com/
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-20.x-publish-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20.x-publish-
            ${{ runner.os }}-node-20.x-
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Set up Git user
        run: |
          git config --global user.email "github@sl.neteng.cc"
          git config --global user.name "SunDevil311"
      - name: Increment version
        run: npm version patch
      - name: Copy package.json to dist directory
        run: cp package.json dist/
      - name: Publish package
        working-directory: ./dist
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PAT }}
