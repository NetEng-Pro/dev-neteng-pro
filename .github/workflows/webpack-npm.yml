# SPDX-License-Identifier: CC-BY-4.0 OR GPL-3.0-or-later
# This file is part of Network Engineering Pro

name: Build/Test Webpack, Publish to npm

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  check-codeql:
    name: Check CodeQL Analysis
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up GitHub CLI
        run: sudo apt-get install gh
      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
      - name: Check CodeQL Workflow
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list --workflow "CodeQL" --json conclusion --jq '.[0].conclusion' > codeql_status.txt
          CODEQL_STATUS=$(cat codeql_status.txt)
          if [[ "$CODEQL_STATUS" != "success" ]]; then
            echo "CodeQL Analysis did not succeed. Exiting..."
            exit 1
          fi

  build:
    needs: check-codeql
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-node-${{ matrix.node-version }}-build-${{
            hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-build-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Run tests using Mocha framework
        run: npm test
        continue-on-error: true
      - name: Build project
        run: npm run build
      - name: Copy package.json to dist directory
        run: cp package.json dist/

  publish-npm:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-node-20.x-publish-${{
            hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20.x-publish-
            ${{ runner.os }}-node-20.x-
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Set up Git user
        run: |
          git config --global user.email "github@sl.neteng.cc"
          git config --global user.name "SunDevil311"
      - name: Increment version
        run: npm version patch
      - name: Push version commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main
      - name: Copy package.json to dist directory
        run: cp package.json dist/
      - name: Publish package
        working-directory: ./dist
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
